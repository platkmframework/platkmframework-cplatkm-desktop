/*
 * Copyright 2025 Eduardo Iglesias.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.platkmframework.cplatkm.desktop.panels.openapi.paths;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectWriter;
import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Consumer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import org.platkmframework.cplatkm.desktop.commons.editor.ComponentInspector;
import org.platkmframework.cplatkm.desktop.commons.editor.EditComponentsInspector;
import org.platkmframework.cplatkm.desktop.commons.editor.JTextPaneComponentInspector;
import org.platkmframework.cplatkm.desktop.core.CPlatkmContentManager;

/**
 *
 * @author Eduardo Iglesias
 */
public class PathsContentEditorPanel extends javax.swing.JPanel {

  
    private Consumer<String> save;
      
    /**
     * Creates new form GlobalDataEditorPanel
     */
    public PathsContentEditorPanel() {
        initComponents();
        
        increaseFontSizeButton.addActionListener(e -> {
            Font currentFont = textPane.getFont();
            textPane.setFont(new Font(currentFont.getName(), currentFont.getStyle(), currentFont.getSize() + 2));
        });

        decreaseFontSizeButton.addActionListener(e -> {
            Font currentFont = textPane.getFont();
            textPane.setFont(new Font(currentFont.getName(), currentFont.getStyle(), Math.max(currentFont.getSize() - 2, 8)));
        });
        
        colorButton.addActionListener(e -> {
            Color selectedColor = JColorChooser.showDialog(CPlatkmContentManager.getInstance().getMainFrame(), "Elige un color", Color.BLACK);
            if (selectedColor != null) {
                textPane.setForeground(selectedColor);
            }
        });
        
        String[] fonts = GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames();
        fontComboBox.removeAllItems();
        if(fonts != null && fonts.length>0)
            for (String font : fonts) {
                fontComboBox.addItem(font);
            }
            
        fontComboBox.addActionListener(e -> {
            String selectedFont = (String) fontComboBox.getSelectedItem();
            Font currentFont = textPane.getFont();
            textPane.setFont(new Font(selectedFont, currentFont.getStyle(), currentFont.getSize()));
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();
        jToolBar1 = new javax.swing.JToolBar();
        decreaseFontSizeButton = new javax.swing.JButton();
        increaseFontSizeButton = new javax.swing.JButton();
        colorButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        fontComboBox = new javax.swing.JComboBox<>();

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane1.setViewportView(textPane);

        jToolBar1.setRollover(true);

        decreaseFontSizeButton.setText("A-");
        decreaseFontSizeButton.setFocusable(false);
        decreaseFontSizeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        decreaseFontSizeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(decreaseFontSizeButton);

        increaseFontSizeButton.setText("A+");
        increaseFontSizeButton.setFocusable(false);
        increaseFontSizeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        increaseFontSizeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(increaseFontSizeButton);

        colorButton.setText("Color");
        colorButton.setFocusable(false);
        colorButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        colorButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(colorButton);
        jToolBar1.add(jSeparator1);

        jToolBar1.add(fontComboBox);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton colorButton;
    private javax.swing.JButton decreaseFontSizeButton;
    private javax.swing.JComboBox<String> fontComboBox;
    private javax.swing.JButton increaseFontSizeButton;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextPane textPane;
    // End of variables declaration//GEN-END:variables


    public void setData(String json) {
        textPane.setText(json);
    }
    
    public javax.swing.JTextPane getTextPane(){
        return this.textPane;
    }

}
